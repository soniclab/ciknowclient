<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 styleName="innerPanel"
		 title="{titlePrefix}"
		 xmlns:parsley="http://www.spicefactory.org/parsley" 
		 xmlns:components="edu.northwestern.ciknow.common.components.*">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import edu.northwestern.ciknow.common.components.events.PaginateEvent;
			import edu.northwestern.ciknow.common.domain.NodeDTO;
			import edu.northwestern.ciknow.common.events.NodeEvent;
			import edu.northwestern.ciknow.common.util.LogUtil;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.logging.ILogger;
			
			import spark.events.GridSelectionEvent;
			
			private static var logger:ILogger = LogUtil.getLog(NodeListPanel);
			
			[Inject]
			[Bindable]
			public var pm:NodePM;			
			
			[Bindable]
			public var titlePrefix:String = "";
			
			public var saveOrResetMessage:String = "You have changed the selected node. \nPlease save or reset before further action.";
			
			private function sortById(o1:Object, o2:Object, gc:GridColumn):int{
				var n1:Number = Number(o1.nodeId);
				var n2:Number = Number(o2.nodeId);
				if (n1 < n2) return -1;
				else if (n1 > n2) return 1;
				else return 0;
			}
			
			private function pageChangeHandler(e:PaginateEvent):void
			{
				if (e.index < 0) return;
				pm.page = e.index;
				pm.includeCount = false;
				pm.search();
			}
			
			[MessageHandler(selector="gotNodesByCriteria")]
			public function gotNodes(event:NodeEvent):void{
				
				var startIndex:int = (pm.page * pm.pageSize) + 1;
				var endIndex:int = Math.min((startIndex + pm.pageSize -1), pm.nodeTotal);
				
				this.title = titlePrefix + " " + String(startIndex) + " - " + String(endIndex) + " of " + pm.nodeTotal;
				
				// always reset the selected button (index=0) when doing new search (includeCount=true)
				if (pm.includeCount && pm.nodeTotal > 0) paginator.updateSelectedButton(0);
			}
			
			private function onSelectionChanging(event:GridSelectionEvent):void{
				if (pm.selectedNode != null && pm.selectedNode.dirty) {
					Alert.yesLabel = "Save";
					Alert.noLabel = "Reset";
					Alert.show(
						saveOrResetMessage, "", 
						Alert.YES|Alert.NO|Alert.CANCEL,
						null,
						saveOrResetHandler);
					Alert.yesLabel = "Yes";
					Alert.noLabel = "No";
					
					event.preventDefault();
				}
			}
			
			private function saveOrResetHandler(e:CloseEvent):void{
				if (e.detail == Alert.YES){
					pm.updateNode();
				} else if (e.detail == Alert.NO){
					pm.resetNode();
				} else{
					// do nothing
				}
			}
		]]>
	</fx:Script>
	
	<components:Paginator id="paginator" 
					itemsPerPage="{pm.pageSize}"
					itemsTotal="{pm.nodeTotal}" 
					rangeCount="{pm.rangeCount}"
					pageChange="pageChangeHandler(event)"
					visible="{paginator.pages > 1}" 
					includeInLayout="{paginator.pages > 1}"
					enabled="{!pm.selectedNode.dirty}"/>
	<s:DataGrid id="dg" selectionChanging="onSelectionChanging(event)"
				 selectionChange="pm.selectNode(dg.selectedItems)" 
				 dataProvider="{pm.nodes}"
				 height="100%" width="100%" 
				 selectionMode="multipleRows">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn id="idColumn" headerText='id' dataField='nodeId' width="40" sortCompareFunction="sortById"/>
				<s:GridColumn id="usernameColumn" headerText="username" dataField="username" width="75" showDataTips="true" dataTipField="username"/>
				<s:GridColumn id="labelColumn" headerText='label' dataField="label" showDataTips="true" dataTipField="label"/>	
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>	
</s:Panel>
