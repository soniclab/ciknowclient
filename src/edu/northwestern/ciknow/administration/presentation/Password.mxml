<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		  xmlns:parsley="http://www.spicefactory.org/parsley">
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import edu.northwestern.ciknow.common.domain.SharedModel;
			import edu.northwestern.ciknow.common.events.NodeEvent;
			import edu.northwestern.ciknow.common.util.LogUtil;
			import edu.northwestern.ciknow.common.util.NodeUtil;
			
			import mx.logging.ILogger;
			import mx.utils.StringUtil;
			
			private static var logger:ILogger = LogUtil.getLog(Password);
			
			[Bindable] private var isAdmin:Boolean = false;
			
			[MessageDispatcher]
			public var dispatcher:Function;
			
			[Inject]
			public var model:SharedModel;
			
			[Inject]
			public var nu:NodeUtil;
			
			public var incorrectPasswordMessage:String = "Incorrect password, please retry.";
			public var passwordNotMatchMessage:String = "New passwords not match each other, please retry.";
			
			[Init]
			public function init():void{
				logger.info("initializing...");
				
				isAdmin = nu.isAdmin(model.loginNode);
				
				logger.info("initialized.");
			}
			
			private function changeSelfPassword():void{							
				msg.text = "";
				
				if (newPasswordTi.text != confirmNewPasswordTi.text){
					msg.text = passwordNotMatchMessage;
					return;
				}else if (passwordTi.text != model.loginNode.password){
					msg.text = incorrectPasswordMessage;
					return;
				}else {
					var event:NodeEvent = new NodeEvent(NodeEvent.UPDATE_PASSWORD);
					event.data.nodeId = model.loginNode.nodeId.toString();
					event.data.password = StringUtil.trim(newPasswordTi.text);
					dispatcher(event);				
				}				
			}
			
			private function changeOthersPassword():void{							
				otherMsg.text = "";
				
				if (newPasswordTi2.text != confirmNewPasswordTi2.text){
					otherMsg.text = passwordNotMatchMessage;
					return;
				}
				
				var event:NodeEvent = new NodeEvent(NodeEvent.UPDATE_PASSWORD);
				event.data.username = StringUtil.trim(usernameTi.text);
				event.data.password = StringUtil.trim(newPasswordTi2.text);
				dispatcher(event);			
			}			
		]]>
	</fx:Script>

	
	<s:Form width="750">
		<s:FormHeading id="changePasswordHeading" label="Change Your Password" width="748"/>
		<s:FormItem id="currentPasswordItem" label="Current Password">
			<s:TextInput id="passwordTi" displayAsPassword="true" enter="changeSelfPassword()"/>			
		</s:FormItem>
		<s:FormItem id="newPasswordItem" label="New Password">
			<s:TextInput id="newPasswordTi" displayAsPassword="true" enter="changeSelfPassword()"/>
		</s:FormItem>
		<s:FormItem id="confirmPasswordItem" label="Confirm New Password">
			<s:TextInput id="confirmNewPasswordTi" displayAsPassword="true" enter="changeSelfPassword()"/>
		</s:FormItem>		
		<s:FormItem>
			<s:Button id="saveBtn" label="Save" click="changeSelfPassword()"/>
			<s:Label id="msg" color="red" fontStyle="italic"/>
		</s:FormItem>
	</s:Form>
	
	<s:Spacer height="20"/>
	
	<s:Form id="adminForm" width="750" visible="{isAdmin}" includeInLayout="{isAdmin}">
		<s:FormHeading id="otherChangePasswordHeading" label="Change Other's Password" width="748"/>
		<s:FormItem id="otherUsernameItem" label="Username">
			<s:TextInput id="usernameTi"/>
		</s:FormItem>
		<s:FormItem id="otherNewPasswordItem" label="New Password">
			<s:TextInput id="newPasswordTi2" displayAsPassword="true" enter="changeOthersPassword()"/>
		</s:FormItem>
		<s:FormItem id="otherConfirmPasswordItem" label="Confirm New Password">
			<s:TextInput id="confirmNewPasswordTi2" displayAsPassword="true" enter="changeOthersPassword()"/>
		</s:FormItem>		
		<s:FormItem>
			<s:Button id="otherSaveBtn" label="Save" click="changeOthersPassword()"/>
			<s:Label id="otherMsg" color="red" fontStyle="italic"/>
		</s:FormItem>
	</s:Form>
</s:VGroup>
