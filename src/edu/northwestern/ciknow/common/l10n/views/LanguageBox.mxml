<?xml version="1.0" encoding="utf-8"?>
<s:Group alpha="0"
		 creationComplete="onInitView();"
		 xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" >

	<fx:Script>
		<![CDATA[
			import org.babelfx.events.LocaleEvent;
			import edu.northwestern.ciknow.common.l10n.views.assets.LocaleAssets;
			
			import mx.collections.ArrayCollection;
			import mx.events.PropertyChangeEvent;
			
			
			[Bindable('propertyChange')]
			public function get selectedLocale():String   {  return _locale;			}

			
			/**
			 * Special accessor to allow l10n injection into the tooltip text on each Flag buttons
			 */
			public function get items():ArrayCollection { return _items; }
			
			// *********************************************************
			// Overriden Methods 
			// *********************************************************
			
			override protected function createChildren():void {
				super.createChildren();
				buildLocales();
			}
			
			// *********************************************************
			// EventHandlers 
			// *********************************************************
			
			private function onInitView():void {
				// Fade in the entire langugage bar...
				var effect: Fade  = this.fadeIn;
				var timer : Timer = new Timer(750,1);
				
				timer.addEventListener(	TimerEvent.TIMER,
					function(event:TimerEvent):void {
						fadeIn.play();
					},
					false, 0, false);
				timer.start();
			}
			
			/**
			 * Eventhandler triggered to switch to the specified locale; locale desired is
			 *  based on the Flag image button selected.
			 */
			private function onLoadLocale(event:Event=null, item:Object=null):void {
				if (event) item = langBox.selectedItem;
				else langBox.selectedItem = item;
				
				_locale = item.locale;
				
				// Dispatch an l10nInjection event to trigger locale switching
				// Then notify any watchers that the locale value has changed...
				dispatchEvent(new LocaleEvent(LocaleEvent.LOAD_LOCALE,_locale));
				dispatchEvent(PropertyChangeEvent.createUpdateEvent(this,"selectedLocale",null,_locale));
			}
			
			// *********************************************************
			// Private Methods 
			// *********************************************************

			/**
			 * Build the locale image Flags dynamically using the LocaleAssets.
			 * Additions/Modifications to the LocaleAssets will automatically change
			 * the image buttons shown and work with the LocalizationMaps.
			 * 
			 */
			private function buildLocales():void {				
				for (var j:int=0; j<LocaleAssets.allFlags.length; j++) {
					var flag: Class = LocaleAssets.allFlags[j] as Class;
					var item:Object = new Object();
					item.flag = flag;					
					var locale : String = LocaleAssets.getLocaleFor(flag);
					item.locale = locale;					
					item.label = LocaleAssets.getTitleFor(flag);
					_items.addItem(item);

					// Current OS matches this locale... so simulate click on button					
					if (locale.indexOf(Capabilities.language) > -1) {
						onLoadLocale(null,item);
					}
				}				
			}
			
			[Bindable]
			private var _items : ArrayCollection = new ArrayCollection();
			private var _locale  : String = "";
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Fade 			 id="fadeIn" duration="900" alphaTo="1" target="{this}"  />
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:Label id="lblBarHelp" text="Switch to locale:" alpha="0.5" fontSize="9" />
	<mx:Spacer width="11" height="1" />
	<s:DropDownList id="langBox" dataProvider="{_items}" labelField="label" change="onLoadLocale(event)"/>
</s:Group>
