<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" 
		 creationComplete="init()" 
		 xmlns:parsley="http://www.spicefactory.org/parsley">
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[			
			import edu.northwestern.ciknow.common.domain.SharedModel;
			import edu.northwestern.ciknow.common.events.RecommendationEvent;
			import edu.northwestern.ciknow.common.util.GeneralUtil;
			import edu.northwestern.ciknow.common.util.LogUtil;
			
			import mx.collections.ArrayCollection;
			import mx.collections.SortField;
			import mx.controls.Alert;
			import mx.logging.ILogger;
			import mx.logging.Log;
			import mx.utils.StringUtil;
			
			private static var logger:ILogger = LogUtil.getLog(MahoutRecommender);
			
			[Bindable] 
			private var recommendations:ArrayCollection;	
			
			[MessageDispatcher]
			public var dispatcher:Function;
			
			[Inject][Bindable]
			public var sm:SharedModel;			

			[Inject]
			public var gu:GeneralUtil;
			
			private function init():void{
				logger.debug("initializing...");
				
				getRecommendations();
			}

			private function getRecommendations():void{
				logger.info("get recommendations ...");
				var e:RecommendationEvent = new RecommendationEvent(RecommendationEvent.GET_MAHOUT_RECOMMENDATIONS);
				e.data.userId = StringUtil.trim(userIdTi.text);
				e.data.numRec = StringUtil.trim(numRecTi.text);
				dispatcher(e);
			}

			[MessageHandler(selector="gotMahoutRecommendations")]
			public function recommendationsHandler(event:RecommendationEvent):void{
				recommendations = event.data as ArrayCollection;	
				if (recommendations == null || recommendations.length == 0){
					Alert.show("There is no recommendations.");
					return;
				}
				recommendations.sort = gu.getSort("score", false, true);
				recommendations.refresh();
			}						
			

		]]>
	</fx:Script>
	
	<s:Form id="searchForm">
		<s:FormItem label="User ID">
			<s:TextInput id="userIdTi" text="{sm.loginNode.nodeId}"/>
		</s:FormItem>
		<s:FormItem label="Number of Recs">
			<s:TextInput id="numRecTi" text="10"/>
		</s:FormItem>
	</s:Form>
	
	<s:DataGrid id="recDg" dataProvider="{recommendations}" width="100%" height="100%">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="node_id" headerText="ID" sortable="true"/>
				<s:GridColumn dataField="username" headerText="Username"/>
				<s:GridColumn dataField="label" headerText="Label"/>
				<s:GridColumn dataField="score" headerText="Score" sortable="true" sortDescending="true"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	<s:controlBarContent>
		<s:Button label="Refresh" click="getRecommendations()"/>
	</s:controlBarContent>	
</s:Panel>
