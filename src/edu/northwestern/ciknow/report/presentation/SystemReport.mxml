<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%" styleName="headlessPanel"
		 xmlns:parsley="http://www.spicefactory.org/parsley">
	
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			
			import edu.northwestern.ciknow.common.domain.GroupDTO;
			import edu.northwestern.ciknow.common.domain.SharedModel;
			import edu.northwestern.ciknow.common.events.GeneralEvent;
			import edu.northwestern.ciknow.common.util.Constants;
			import edu.northwestern.ciknow.common.util.GroupUtil;
			import edu.northwestern.ciknow.common.util.IOUtil;
			import edu.northwestern.ciknow.common.util.LogUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.logging.ILogger;
			
			private static var logger:ILogger = LogUtil.getLog(SystemReport);
			
			
			[Inject]
			public var groupUtil:GroupUtil;
			
			[Inject]
			public var ioUtil:IOUtil;
			
			[Inject]
			[Bindable]
			public var sm:SharedModel;
			
			[MessageDispatcher]
			public var dispatcher:Function;
			
			
			[Bindable] private var progressData:ArrayCollection = null;
			
			public var selectGroupMessage:String = "Please select a group first.";
			
			[Init]
			public function init():void{
			
				logger.debug("initializing...");
				// get progress
				var group:GroupDTO = groupUtil.getGroupByName(Constants.GROUP_USER);
				groupBox.selectedItem = group;
				getProgress();
				
				logger.debug("initialized.");	
			}
			
			
			private function getProgress():void{
				logger.info("getProgress..........");
				var group:GroupDTO = groupBox.selectedItem as GroupDTO;
				if (group == null){
					Alert.show(selectGroupMessage);
					return;
				}
			
				
				var e:GeneralEvent = new GeneralEvent(GeneralEvent.GET_PROGRESS);
				e.data = new Object();
				e.data.groupId = group.groupId.toString();
				dispatcher(e);
				
			}
			
			[MessageHandler(selector="getProgressDone")]
			public function getProgressDone(event:GeneralEvent):void{
				logger.info("getProgressDone...");
				progressData = event.data as ArrayCollection;
			}
			
			
		
			private function export():void{
				var group:GroupDTO = groupBox.selectedItem as GroupDTO;
				if (group == null){
					Alert.show(selectGroupMessage);
					return;
				}
				ioUtil.downloadSystemReport(group.groupId.toString());
			}
			
			
			private function sortById(o1:Object, o2:Object, gc:GridColumn):int{
				var id1:Number = Number(o1.id);
				var id2:Number = Number(o2.id);
				if (id1 < id2) return -1;
				else if (id1 > id2) return 1;
				else return 0;
			}
			
			private function sortByProgress(o1:Object, o2:Object, gc:GridColumn):int{
				var p1:String = o1.progress as String;
				var max1:Number = Number(p1.substring(0, p1.indexOf("/")));
				var p2:String = o2.progress as String;
				var max2:Number = Number(p2.substring(0, p2.indexOf("/")));
				if (max1 < max2) return -1;
				else if (max1 > max2) return 1;
				else return 0;				
			}
			
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>

	<s:HGroup>
		<s:DropDownList 
			id="groupBox" 
			labelField="name" 
			dataProvider="{sm.groups}" 
			width="400"/>
		<s:Button id="getProgressBtn" label="Get Progress" click="getProgress()"/>
	</s:HGroup>	

	<s:DataGrid id="progressDg"  
				width="100%" height="100%"
				dataProvider="{progressData}"
				>
		<s:columns>
			<s:ArrayList>
				<s:GridColumn id="idColumn" headerText="ID" dataField="id" width="30" sortCompareFunction="sortById"/>
				<s:GridColumn id="usernameColumn" headerText="Username" dataField="username" width="75"/>
				<s:GridColumn id="labelColumn" headerText="Label" dataField="label" minWidth="100"/>
				<s:GridColumn id="lastAnsweredPageColumn" headerText="Most Recently Answered Page" dataField="lastEnteredPage" minWidth="200"/>	
				<s:GridColumn id="progressColumn" headerText="Progress" dataField="progress" width="100" sortCompareFunction="sortByProgress"/>				
				<s:GridColumn id="statusColumn" headerText="Status" dataField="status" width="100"/>
			</s:ArrayList>			
		</s:columns>
	</s:DataGrid>

	<s:controlBarContent>
		<s:Button id="exportBtn" label="Export" click="export()"/> 	
	</s:controlBarContent>
</s:Panel>
